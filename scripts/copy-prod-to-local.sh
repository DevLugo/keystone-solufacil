#!/bin/bash

# Script para copiar datos de producci√≥n a local
# Uso: ./scripts/copy-prod-to-local.sh

set -e  # Salir si hay alg√∫n error

echo "üîÑ Iniciando copia de base de datos de producci√≥n a local..."

# Cargar variables de entorno
if [ -f .env ]; then
    # Cargar variables de forma segura
    while IFS= read -r line; do
        # Saltar l√≠neas vac√≠as y comentarios
        if [[ -n "$line" && ! "$line" =~ ^[[:space:]]*# ]]; then
            # Exportar variable
            export "$line"
        fi
    done < .env
else
    echo "‚ùå Error: Archivo .env no encontrado"
    echo "üí° Copia env.example a .env y configura las variables necesarias"
    exit 1
fi

# Verificar variables requeridas
if [ -z "$PROD_DATABASE_URL" ] || [ -z "$LOCAL_DATABASE_URL" ]; then
    echo "‚ùå Error: Variables de base de datos no configuradas"
    echo "üí° Configura PROD_DATABASE_URL y LOCAL_DATABASE_URL en tu archivo .env"
    exit 1
fi

# Variables de conexi√≥n desde .env
PROD_DB="$PROD_DATABASE_URL"
LOCAL_DB="$LOCAL_DATABASE_URL"

# Archivo temporal para el dump
DUMP_FILE="temp_prod_dump.sql"

echo "üì• Creando dump de la base de datos de producci√≥n..."
pg_dump "$PROD_DB" \
  --schema=public \
  --exclude-table-data='"User"' \
  --no-owner \
  --no-privileges \
  --no-tablespaces \
  --no-security-labels \
  --no-comments \
  --clean \
  --if-exists \
  > "$DUMP_FILE"

echo "üîß Limpiando referencias a usuarios inexistentes..."
# Crear un archivo temporal para limpiar las referencias
CLEANED_DUMP="temp_cleaned_dump.sql"

# Solo comentar las restricciones problem√°ticas espec√≠ficas
sed -E '
  # Comentar solo las restricciones espec√≠ficas que causan problemas
  s/ADD CONSTRAINT "PortfolioCleanup_executedBy_fkey"/-- ADD CONSTRAINT "PortfolioCleanup_executedBy_fkey"/
  s/ADD CONSTRAINT "LeadPaymentReceived_createdBy_fkey"/-- ADD CONSTRAINT "LeadPaymentReceived_createdBy_fkey"/
  s/ADD CONSTRAINT "LeadPaymentReceived_updatedBy_fkey"/-- ADD CONSTRAINT "LeadPaymentReceived_updatedBy_fkey"/
  s/ADD CONSTRAINT "FalcoCompensatoryPayment_createdBy_fkey"/-- ADD CONSTRAINT "FalcoCompensatoryPayment_createdBy_fkey"/
  s/ADD CONSTRAINT "FalcoCompensatoryPayment_updatedBy_fkey"/-- ADD CONSTRAINT "FalcoCompensatoryPayment_updatedBy_fkey"/
' "$DUMP_FILE" > "$CLEANED_DUMP"

# Reemplazar el archivo original con el limpio
mv "$CLEANED_DUMP" "$DUMP_FILE"

echo "üóëÔ∏è Limpiando base de datos local..."
psql "$LOCAL_DB" -c "DROP SCHEMA IF EXISTS public CASCADE; CREATE SCHEMA public;"

echo "üì§ Restaurando datos en base de datos local..."
psql "$LOCAL_DB" < "$DUMP_FILE"

echo "üîß Arreglando restricciones de clave for√°nea..."
# Ejecutar el script de arreglo de claves for√°neas
./scripts/fix-foreign-keys.sh

echo "üîë Verificando usuario de acceso..."
# Verificar que el usuario se cre√≥ correctamente
psql "$LOCAL_DB" -c "SELECT id, name, email, role FROM \"User\" WHERE email = 'elugo.isi@gmail.com';"

echo "üßπ Limpiando archivo temporal..."
rm "$DUMP_FILE"

echo "‚úÖ ¬°Copia completada exitosamente!"
echo "üìä Tu base de datos local ahora tiene los datos de producci√≥n"
echo ""
echo "üîë Credenciales de acceso:"
echo "   Email: elugo.isi@gmail.com"
echo "   Password: admin123"
echo ""
echo "üí° Puedes agregar tus miles de registros y luego usar el script de subida"
